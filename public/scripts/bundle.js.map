{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/filters.js","webpack:///./src/views.js","webpack:///./src/todos.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","filters","searchText","hideCompleted","getFilters","setFilters","updates","_filters","todos","exposeTodos","generateTodoDOM","todo","todoEl","document","createElement","containerEl","checkbox","delTodo","todoText","textContent","text","appendChild","setAttribute","checked","completed","addEventListener","e","toggleTodo","id","saveTodos","renderTodos","classList","add","removeTodo","filteredTodos","filter","searchTextMatch","toLowerCase","includes","hideCompletedMatch","incompleteTodos","querySelector","innerHTML","summary","length","generateSummaryDOM","emptyMessage","forEach","todosJSON","localStorage","getItem","JSON","parse","loadTodos"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","const filters = { //an object for matching values\n    searchText: '',\n    hideCompleted: false\n}\n\nconst getFilters = () => {  \n    return filters\n}\n\nconst setFilters = (updates) => {\n    if (typeof updates.searchText === 'string') {\n        filters.searchText = updates.searchText\n    }\n\n    if (typeof updates.hideCompleted === 'boolean') {\n        filters.hideCompleted = updates.hideCompleted\n    }\n}\n\nexport { getFilters, setFilters }\n\n// //Setup filters default object\n\n// //setFilters\n// //Arguments: updates object with optional searchText or hideCompleted\n// //Return value: none\n\n// //Make sure to setup the exports","import { getFilters } from \"./filters\"\r\nimport { exposeTodos } from \"./todos\"\r\n\r\nconst todos = exposeTodos()\r\n\r\n//Get the DOM elements for an individual note\r\n//generateTodoDOM\r\nconst generateTodoDOM = (todo) => {\r\n    const todoEl = document.createElement('label')\r\n    const containerEl = document.createElement('div')\r\n    const checkbox = document.createElement('input') //checkbox\r\n    const delTodo = document.createElement('button')\r\n    const todoText = document.createElement('span')\r\n    \r\n    todoText.textContent = todo.text\r\n    todoEl.appendChild(todoText)\r\n\r\n    //checkbox\r\n    checkbox.setAttribute('type', 'checkbox') //checkbox\r\n    checkbox.checked = todo.completed\r\n    todoText.appendChild(checkbox)\r\n    checkbox.addEventListener('change',  (e) => {\r\n        toggleTodo(todo.id)\r\n        saveTodos(todos)\r\n        renderTodos(todos, filters)\r\n    })\r\n\r\n    //todotext\r\n    todoText.appendChild(delTodo)\r\n    containerEl.appendChild(todoText)\r\n    \r\n    //Setup container\r\n    todoEl.classList.add('list-item')\r\n    containerEl.classList.add('list-item__container')\r\n    todoEl.appendChild(containerEl)\r\n\r\n    //removetodos button\r\n    delTodo.textContent = 'Remove'\r\n    delTodo.classList.add('button', 'button--text')\r\n    delTodo.addEventListener('click', () => {\r\n        removeTodo(todo.id)\r\n        saveTodos(todos)\r\n        renderTodos(todos, filters)\r\n    })\r\n\r\n    return todoText\r\n}\r\n\r\n\r\n//generateSummaryDOM\r\nconst generateSummaryDOM = (incompleteTodos) => {\r\n    const summary = document.createElement('h2')\r\n\r\n    if (incompleteTodos.length > 1) {\r\n        summary.textContent = `You have ${incompleteTodos.length} todos left`\r\n    } else {\r\n        summary.textContent = `You have ${incompleteTodos.length} todo left`\r\n    }\r\n    return summary\r\n}\r\n\r\n//Render application todos based on filters\r\n//renderTodos that are completed or not\r\nconst renderTodos = () => {\r\n    const filteredTodos = todos.filter((todo) => {\r\n        const filters = getFilters()\r\n        const searchTextMatch = todo.text.toLowerCase().includes(filters.searchText.toLowerCase()) //includes returns a matching object of a todo that was searched\r\n        const hideCompletedMatch = !filters.hideCompleted || !todo.completed //returns either true or false \r\n        \r\n        return searchTextMatch && hideCompletedMatch\r\n    })\r\n\r\n    const incompleteTodos = filteredTodos.filter((todo) => !todo.completed) //filter returns a false todo.completed status\r\n\r\n    document.querySelector('#todos').innerHTML = ''\r\n\r\n    document.querySelector('#todos').appendChild(generateSummaryDOM(incompleteTodos))\r\n\r\n// Returning empty message if no todo\r\n    if (filteredTodos.length === 0) {\r\n\r\n        const emptyMessage = document.createElement('p')\r\n        emptyMessage.textContent = 'No todos available'\r\n        document.querySelector('#todos').appendChild(emptyMessage)\r\n        emptyMessage.classList.add('empty-message')\r\n\r\n    } else {\r\n        filteredTodos.forEach( (todo) => {\r\n            document.querySelector('#todos').appendChild(generateTodoDOM(todo))\r\n        })\r\n    }  \r\n}\r\n\r\n\r\nexport { renderTodos }\r\n\r\n// //renderTodos\r\n// //Arguments: none\r\n// //Return value: none\r\n\r\n// //generateTodoDOM\r\n// //Arguments: todo\r\n// //Return value: the todo element\r\n\r\n// //generateSummaryDOM\r\n// //Arguments: incompleteTodos\r\n// //Return value: the summary element\r\n\r\n// //Setup the exports","\nlet todos = []\n\n\n// //create todo\n// const createTodo = (todos, text) => {\n//     todos.push({\n//             id: uuidv4(),\n//             text: text,\n//             completed: false\n//         })\n//     saveTodos(todos)\n//     renderTodos(todos, getFilters())\n// }\n\n// Fetching already created todos\n// loadTodos\nconst loadTodos = () => {\n    const todosJSON = localStorage.getItem('todos')\n    try {\n        return todosJSON ? JSON.parse(todosJSON) : [] //if (todosJSON !== null) execute 'a' else 'b'\n    } catch (e) {\n        return []\n    }\n}\n\ntodos = loadTodos()     \n\n// exposeTodos\nconst exposeTodos = () => todos\n\n// // Save todos to localStorage\n// const saveTodos = () => {\n//         localStorage.setItem('todos', JSON.stringify(todos))\n// }\n\n// //removetodos by id\n// const removeTodo = (id) => {\n//     const TodoIndex = todos.findIndex( (todo) =>  todo.id === id)\n\n//     if (TodoIndex > -1) {\n//         todos.splice(TodoIndex, 1)\n//     }\n// }\n\ntoggleTodo\nconst toggleTodo = (id) => {  //this functions sets the completed status of a todo to its opposite, either true or false, the result is toggled by the checkbox\n    const TodoIndex2 = todos.findIndex( (todo) => {\n        return todo.id === id\n    })\n    if (TodoIndex2 > -1) {\n        todos[TodoIndex2].completed = !todos[TodoIndex2].completed\n    }\n}\n\n\n\nexport { exposeTodos }\n\n//Setup the empty todos array\n\n//loadTodos\n//Arguments: none\n//Return value: none\n\n//saveTodos\n//Arguments: none\n//Return value: none\n\n//getTodos\n//Arguments: none\n//Return value: todos array\n\n//createTodo\n//Arguments: todo text\n//Return value : none\n\n//removeTodo\n//Arguments: id of todo to remove\n//Remove value : none\n\n//toggleTodo\n//Arguments: id of todo to toggle\n//Return value: none\n\n//Make sure to call loadTodos and setup the exports\n\n\n","import { renderTodos } from \"./views\"\n\nrenderTodos()\n// //getting search value\n// document.querySelector('#search-text').addEventListener('input',  (e) => {\n\n//     setFilters(e.target.value)\n//     filters.searchText = e.target.value\n//     renderTodos(todos, filters)\n// })\n\n// //adding todo\n// document.querySelector('#new-todo').addEventListener('submit',  (e) => {\n//     e.preventDefault() //remove default browser behaviour\n\n//     const text = e.target.elements.text.value.trim() //remove empty spaces from text\n//     if (text.length > 0) {\n//         let todos = exposeTodos()\n//         createTodo(todos, text)\n//     e.target.elements.text.value = '' //clears the textbox after saving a todo entry\n//     }       \n// })\n\n// document.querySelector('#hide-completed').addEventListener('change',  (e) => {\n//     filters.hideCompleted = e.target.checked\n//     renderTodos(todos, filters)\n// })\n\n\n\n//Add necessary imports\n\n//Render initial todos\n\n//Setup search text handler\n\n//Setup checkbox handler\n\n//Setup form submission handler\n\n//Bonus: Add a watcher for local storage"],"sourceRoot":""}